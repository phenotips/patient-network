<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see http://www.gnu.org/licenses/
-->

<xwikidoc version="1.1">
  <web>MatchingNotification</web>
  <name>AdminMatchNotificationEmailTemplate</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1459795227000</creationDate>
  <parent>PhenoTips.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1459898008000</date>
  <contentUpdateDate>1459897988000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content/>
  <object>
    <name>MatchingNotification.AdminMatchNotificationEmailTemplate</name>
    <number>0</number>
    <className>XWiki.Mail</className>
    <guid>bfa66698-2404-4fdc-84cf-394b41f602a8</guid>
    <class>
      <name>XWiki.Mail</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <html>
        <disabled>0</disabled>
        <name>html</name>
        <number>4</number>
        <prettyName>HTML</prettyName>
        <rows>15</rows>
        <size>80</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </html>
      <language>
        <disabled>0</disabled>
        <name>language</name>
        <number>2</number>
        <prettyName>Language</prettyName>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </language>
      <subject>
        <disabled>0</disabled>
        <name>subject</name>
        <number>1</number>
        <prettyName>Subject</prettyName>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </subject>
      <text>
        <disabled>0</disabled>
        <name>text</name>
        <number>3</number>
        <prettyName>Text</prettyName>
        <rows>15</rows>
        <size>80</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </text>
    </class>
    <property>
      <html>#set($table = 'border: 1px solid black; border-collapse: collapse; text-align: left; vertical-align: middle; font-weight: normal; padding: 0.2em;')
#set($phenotype-table = 'border: 1px solid black; border-collapse: collapse; text-align: left; vertical-align: top; font-weight: normal;')
#set($subheader = 'font-weight : bold;')
#set($grey-background = 'background-color : lightgrey; width : 300px;')
#set($space-between-matches = 'margin-top : 25px;')
#set($disclaimer = 'font-size : 10px;')
#set($patient-id = 'white-space : no-wrap;')
#set($abnormality-category = 'margin: 3px 0 3px 0; font-weight: bold;')
#set($transparent = 'color: transparent;')
#set($bullet-list = 'list-style-type: disc; margin: 0 0 0 2em;')
#set($transparent-list = 'list-style-type: none; margin: 0 0 0 2em;')
#if ("$!subjectPatient.serverId" == "")
  #set($subjectPatientObj = $services.patients.get($!subjectPatient.patientId))
#end
#set ($preferenceDoc = $xwiki.getDocumentAsAuthor("XWiki.XWikiPreferences"))
&lt;p&gt;$!services.localization.render('phenotips.matchingNotifications.email.salutation', 'xhtml/1.0')&lt;/p&gt;
&lt;p&gt;$!services.localization.render('phenotips.matchingNotifications.email.introduction', 'xhtml/1.0', [$matches.size()])&lt;/p&gt;
#foreach ($match in $matches)
#set($config = $preferenceDoc.getObject("PhenomeCentral.RemoteMatchingServiceConfiguration", 'serverId', $!match.subjectMatchedPatient.serverId, false))
#set($matchedPatientServerName = $config.getValue('humanReadableName'))
&lt;table style="$table"&gt;
   &lt;thead&gt;
      &lt;tr&gt;
         &lt;th&gt;&lt;/th&gt;
         &lt;th style="$grey-background $table"&gt;
            &lt;div style="$subheader"&gt;$!services.localization.render('phenotips.matchingNotifications.email.table.yourPatient.label', 'xhtml/1.0')&lt;/div&gt;
            &lt;div style="$patient-id"&gt;
               &lt;span&gt;#if($subjectPatientObj)&lt;a href="$xwiki.getDocument($subjectPatientObj.getDocumentReference()).getExternalURL()" target="_blank"&gt;$!{escapetool.xml($!subjectPatient.patientId)}&lt;/a&gt;#else$!{escapetool.xml($!subjectPatient.patientId)}#end&lt;/span&gt;
               &lt;span&gt;$!{escapetool.xml($!subjectPatient.externalId)}&lt;/span&gt;
            &lt;/div&gt;
         &lt;/th&gt;
         &lt;th style="$grey-background $table"&gt;
            &lt;div style="$subheader"&gt;$!services.localization.render('phenotips.matchingNotifications.email.table.matchPatient.label', 'xhtml/1.0')&lt;/div&gt;
            &lt;div&gt;
               &lt;span&gt;$!{escapetool.xml($!match.subjectMatchedPatient.patientId)}&lt;/span&gt;
               &lt;span&gt;#if("$!{matchedPatientServerName}" != "")$!services.localization.render('phenotips.matchingNotifications.email.table.matchPatient.remoteServerName', 'xhtml/1.0'): $!{escapetool.xml($matchedPatientServerName)}#end&lt;/span&gt;
            &lt;/div&gt;
         &lt;/th&gt;
      &lt;/tr&gt;
   &lt;/thead&gt;
   &lt;tbody&gt;
##
##  =====  Mode Of Inheritance section  =====
##
      &lt;tr style="$table"&gt;
         &lt;td style="$table"&gt;&lt;div style="$subheader"&gt;$!services.localization.render('phenotips.matchingNotifications.email.table.modeOfInheritance.label', 'xhtml/1.0')&lt;/div&gt;&lt;/td&gt;
         &lt;td style="$table"&gt;
#foreach ($item in $!subjectPatient.modeOfInheritance)
&lt;div&gt;$!{escapetool.xml($item)}&lt;/div&gt;
#end
         &lt;/td&gt;
         &lt;td style="$table"&gt;
#foreach ($item in $!match.subjectMatchedPatient.modeOfInheritance)
&lt;div&gt;$!{escapetool.xml($!item)}&lt;/div&gt;
#end
         &lt;/td&gt;
      &lt;/tr&gt;
##
##  =====  Age Of Onset section  =====
##
      &lt;tr style="$table"&gt;
         &lt;td style="$table"&gt;&lt;div style="$subheader"&gt;$!services.localization.render('phenotips.matchingNotifications.email.table.ageOfOnset.label', 'xhtml/1.0')&lt;/div&gt;&lt;/td&gt;
         &lt;td style="$table"&gt;$!{escapetool.xml($!subjectPatient.ageOfOnset)}&lt;/td&gt;
         &lt;td style="$table"&gt;$!{escapetool.xml($!match.subjectMatchedPatient.ageOfOnset)}&lt;/td&gt;
      &lt;/tr&gt;
##
##  =====  Genes section  =====
##
      &lt;tr style="$table"&gt;
         &lt;td style="$table"&gt;&lt;div style="$subheader"&gt;$!services.localization.render('phenotips.matchingNotifications.email.table.genes.label', 'xhtml/1.0')&lt;/div&gt;&lt;/td&gt;
         &lt;td style="$table"&gt;
#foreach ($gene in $subjectPatient.candidateGenes)
&lt;div&gt;$!{escapetool.xml($!gene)}&lt;/div&gt;
#end
#foreach ($gene in $subjectPatient.matchedExomeGenes)
  #if(!$subjectPatient.candidateGenes.contains($gene))
    &lt;div&gt;$!{escapetool.xml($!gene)} $services.localization.render('phenotips.matchingNotifications.table.exomeGene.label')&lt;/div&gt;
  #end
#end
         &lt;/td&gt;
         &lt;td style="$table"&gt;
#foreach ($gene in $match.subjectMatchedPatient.candidateGenes)
&lt;div&gt;$!{escapetool.xml($!gene)}&lt;/div&gt;
#end
#foreach ($gene in $match.subjectMatchedPatient.matchedExomeGenes)
  #if(!$match.subjectMatchedPatient.candidateGenes.contains($gene))
    &lt;div&gt;$!{escapetool.xml($!gene)} $services.localization.render('phenotips.matchingNotifications.table.exomeGene.label')&lt;/div&gt;
  #end
#end
         &lt;/td&gt;
      &lt;/tr&gt;
##
##  =====  Phenotypes section  =====
##
#macro (__findPhenotype $list $id)
  #set ($phenotype = '')
  #foreach ($p in $list)
    #if ($p.id == $id)
      #set ($phenotype = $p)
    #end
  #end
#end
##
#macro (__generatePhenotypeTableBlock $predefinedFeatureSet $freetextFeatureSet $targetPatientType)
  &lt;td style="$phenotype-table"&gt;
  #foreach ($phenotypeAbnormalityBlock in $match.featureMatches)
    ## we need to determine whether $subjectPatient is match or reference in a match to print right corresponding feature array
    #if ($!subjectPatient.patientId == $!match.match.matchedPatientId)
      #set($subjectFeatureArray = $phenotypeAbnormalityBlock.match)
      #set($matchFeatureArray = $phenotypeAbnormalityBlock.reference)
    #else
      #set($matchFeatureArray = $phenotypeAbnormalityBlock.match)
      #set($subjectFeatureArray = $phenotypeAbnormalityBlock.reference)
    #end
    #if ($targetPatientType == 'subject')
      #set($featureIdsArray = $subjectFeatureArray)
      ## we need to determine the difference in array sizes to generate empty divs for smaller arrays to align categories in table
      #if ($matchFeatureArray.length() &gt; $subjectFeatureArray.length())
        #set($diff = $matchFeatureArray.length() - $subjectFeatureArray.length())
      #else
        #set($diff = 0)
      #end
    #else
      #set($featureIdsArray = $matchFeatureArray)
      ## we need to determine the difference in array sizes to generate empty divs for smaller arrays to align categories in table
      #if ($matchFeatureArray.length() &lt; $subjectFeatureArray.length())
        #set($diff = $subjectFeatureArray.length() - $matchFeatureArray.length())
      #else
        #set($diff = 0)
      #end
    #end
    &lt;div style="$abnormality-category"&gt;$phenotypeAbnormalityBlock.category.name&lt;/div&gt;
    #if ($predefinedFeatureSet.size() &gt; 0)
      &lt;ul style="$bullet-list"&gt;##
      #foreach ($item in $featureIdsArray)
        #__findPhenotype($predefinedFeatureSet, $item)
        #if ($phenotype != '')
          &lt;li&gt;##
          #if ($phenotype.observed == 'no')
            $!services.localization.render('phenotips.matchingNotifications.email.table.phenotypes.negativePhenotype', 'xhtml/1.0', [$!phenotype.name])##
          #else
            $!{escapetool.xml($phenotype.name)}##
          #end
          &lt;/li&gt;
        #end
      #end
      &lt;/ul&gt;
    #end
    ## generate empty divs for smaller arrays to align categories in table
    #if ($diff &gt; 0)
      &lt;ul style="$transparent-list"&gt;
      #foreach ($iteration in [1..$diff])
        &lt;li style="$transparent"&gt;.&lt;/li&gt;
      #end
      &lt;/ul&gt;
    #end
  #end
  #if ($freetextFeatureSet &amp;&amp; $freetextFeatureSet.size() &gt; 0)
    &lt;div style="$abnormality-category"&gt;Free Text&lt;/div&gt;
    &lt;ul style="$bullet-list"&gt;##
    #foreach ($phenotype in $freetextFeatureSet)
      &lt;li&gt;##
        #if ($phenotype.observed == 'no')
          $!services.localization.render('phenotips.matchingNotifications.email.table.phenotypes.negativePhenotype', 'xhtml/1.0', [$!phenotype.name])##
        #else
          $!{escapetool.xml($!phenotype.name)}##
        #end
      &lt;/li&gt;
    #end
    &lt;/ul&gt;
  #end
  &lt;/td&gt;
#end## End of macro
      &lt;tr style="$table"&gt;
        &lt;td style="$table"&gt;&lt;div style="$subheader"&gt;$!services.localization.render('phenotips.matchingNotifications.email.table.phenotypes.label', 'xhtml/1.0')&lt;/div&gt;&lt;/td&gt;
##
## Generate Feature block for subject patient
##
#__generatePhenotypeTableBlock($subjectPatient.phenotypes.predefined, $subjectPatient.phenotypes.freeText, 'subject')
##
## Generate Feature block for matched patient
##
#__generatePhenotypeTableBlock($match.subjectMatchedPatient.phenotypes.predefined, $match.subjectMatchedPatient.phenotypes.freeText, 'matched')
      &lt;/tr&gt;
##
##  =====  Contact section  =====
##
      &lt;tr style="$table"&gt;
         &lt;td style="$table"&gt;
            &lt;div style="$subheader"&gt;$!services.localization.render('phenotips.matchingNotifications.email.table.contact.label', 'xhtml/1.0')&lt;/div&gt;
         &lt;/td&gt;
         &lt;td style="$table"&gt;&lt;/td&gt;
         &lt;td style="$table"&gt;
#foreach ($email in $!match.subjectMatchedPatientEmails)
&lt;div style="$subheader"&gt;$!{escapetool.xml($!email)}&lt;/div&gt;
#end
         &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr style="$table"&gt;
        &lt;td colspan="3"&gt;
          &lt;div&gt;$!services.localization.render('phenotips.matchingNotifications.email.table.contact.instructions', 'xhtml/1.0')&lt;/div&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
   &lt;tbody&gt;
&lt;/table&gt;
&lt;div style="$space-between-matches"/&gt;
#end
##
##  =====  Closing section  =====
##
&lt;p&gt;$!services.localization.render('phenotips.matchingNotifications.email.conclusion', 'xhtml/1.0')&lt;/p&gt;
&lt;p&gt;$!services.localization.render('phenotips.matchingNotifications.email.closing', 'xhtml/1.0')&lt;br /&gt;
$!services.localization.render('phenotips.matchingNotifications.email.signature', 'xhtml/1.0')&lt;/p&gt;
&lt;p style="$disclaimer"&gt;$!services.localization.render('phenotips.matchingNotifications.email.disclaimer', 'xhtml/1.0')&lt;/p&gt;</html>
    </property>
    <property>
      <language>English</language>
    </property>
    <property>
      <subject>$services.localization.render('phenotips.matchingNotifications.email.subject', [$!subjectPatient.patientId])</subject>
    </property>
    <property>
      <text>$services.localization.render('phenotips.matchingNotifications.email.salutation')

$services.localization.render('phenotips.matchingNotifications.email.introduction', [$matches.size()])

$services.localization.render('phenotips.matchingNotifications.email.table.yourPatient.label') $!subjectPatient.patientId $!subjectPatient.externalId

$services.localization.render('phenotips.matchingNotifications.email.table.modeOfInheritance.label')
#foreach ($item in $!subjectPatient.modeOfInheritance)
* $!item
#end
$services.localization.render('phenotips.matchingNotifications.email.table.ageOfOnset.label') $!subjectPatient.ageOfOnset
$services.localization.render('phenotips.matchingNotifications.email.table.genes.label')
#foreach ($gene in $!subjectPatient.candidateGenes)
* $!gene
#end
#foreach ($gene in $subjectPatient.matchedExomeGenes)
#if(!$subjectPatient.candidateGenes.contains($gene))
* $!gene $services.localization.render('phenotips.matchingNotifications.table.exomeGene.label')
#end
#end
$services.localization.render('phenotips.matchingNotifications.email.table.phenotypes.label')
#foreach ($!phenotype in $!subjectPatient.phenotypes.predefined)
#if ($!phenotype.observed == 'no')
* $services.localization.render('phenotips.matchingNotifications.email.table.phenotypes.negativePhenotype', [$!phenotype.name])
#else
* $!phenotype.name
#end
#end
#foreach ($!phenotype in $subjectPatient.phenotypes.freeText)
#if ($!phenotype.observed == 'no')
* $services.localization.render('phenotips.matchingNotifications.email.table.phenotypes.negativePhenotype', [$!phenotype.name])
#else
* $!phenotype.name
#end
#end

-----------
#set ($preferenceDoc = $xwiki.getDocumentAsAuthor("XWiki.XWikiPreferences"))

#foreach ($match in $matches)
#set($config = $preferenceDoc.getObject("PhenomeCentral.RemoteMatchingServiceConfiguration", 'serverId', $!match.subjectMatchedPatient.serverId, false))
#set($matchedPatientServerName = $config.getValue('humanReadableName'))
$services.localization.render('phenotips.matchingNotifications.email.table.matchPatient.label') $!match.subjectMatchedPatient.patientId#if("$!{matchedPatientServerName}" != "") $!services.localization.render('phenotips.matchingNotifications.email.table.matchPatient.remoteServerName', 'xhtml/1.0') $!{escapetool.xml($matchedPatientServerName)}#end


$services.localization.render('phenotips.matchingNotifications.email.table.modeOfInheritance.label')
#foreach ($item in $match.subjectMatchedPatient.modeOfInheritance)
* $!item
#end
$services.localization.render('phenotips.matchingNotifications.email.table.ageOfOnset.label') $!match.subjectMatchedPatient.ageOfOnset
$services.localization.render('phenotips.matchingNotifications.email.table.genes.label')
#foreach ($gene in $match.subjectMatchedPatient.candidateGenes)
* $!gene
#end
#foreach ($gene in $match.subjectMatchedPatient.matchedExomeGenes)
#if(!$match.subjectMatchedPatient.candidateGenes.contains($gene))
* $!gene $services.localization.render('phenotips.matchingNotifications.table.exomeGene.label')
#end
#end
$services.localization.render('phenotips.matchingNotifications.email.table.phenotypes.label')
#foreach ($!phenotype in $match.subjectMatchedPatient.phenotypes.predefined)
#if ($!phenotype.observed == 'no')
* $services.localization.render('phenotips.matchingNotifications.email.table.phenotypes.negativePhenotype', [$!phenotype.name])
#else
* $!phenotype.name
#end
#end
#foreach ($!phenotype in $match.subjectMatchedPatient.phenotypes.freeText)
#if ($!phenotype.observed == 'no')
* $services.localization.render('phenotips.matchingNotifications.email.table.phenotypes.negativePhenotype', [$!phenotype.name])
#else
* $!phenotype.name
#end
#end
$services.localization.render('phenotips.matchingNotifications.email.table.contact.label')
#foreach ($email in $match.subjectMatchedPatientEmails)
* $!email
#end

$services.localization.render('phenotips.matchingNotifications.email.table.contact.instructions')

#end
$services.localization.render('phenotips.matchingNotifications.email.conclusion')

$services.localization.render('phenotips.matchingNotifications.email.closing')
$services.localization.render('phenotips.matchingNotifications.email.signature')

$services.localization.render('phenotips.matchingNotifications.email.disclaimer')</text>
    </property>
  </object>
</xwikidoc>
