<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see http://www.gnu.org/licenses/
-->

<xwikidoc version="1.1">
  <web>MatchingNotification</web>
  <name>WebHome</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1458756494000</creationDate>
  <parent>PhenoTips.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1463606357000</date>
  <contentUpdateDate>1463603459000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#set ($discard = $response.setContentType('application/json'))
#if ($request.action == 'find-matches')
   #set ($score = $request.score)
   $services.matchingNotification.findAndSaveMatches($score)
#elseif ($request.action == 'show-matches')
   #set ($score = $request.score)
   $services.matchingNotification.getMatches($score)
#elseif ($request.action == 'send-notifications')
   #set ($idsForNotification = $!request.idsForNotification)
   $services.matchingNotification.sendNotifications($idsForNotification)
#end
{{/velocity}}</content>
  <object>
    <name>MatchingNotification.WebHome</name>
    <number>0</number>
    <className>XWiki.ConfigurableClass</className>
    <guid>cbae75c7-77e2-4667-9a83-327cc8885abf</guid>
    <class>
      <name>XWiki.ConfigurableClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <advancedOnly>
        <customDisplay/>
        <defaultValue/>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType/>
        <name>advancedOnly</name>
        <number>5</number>
        <prettyName>advancedOnly</prettyName>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </advancedOnly>
      <categoryPriority>
        <customDisplay/>
        <disabled>0</disabled>
        <name>categoryPriority</name>
        <number>2</number>
        <numberType>integer</numberType>
        <prettyName>categoryPriority</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <classType>com.xpn.xwiki.objects.classes.NumberClass</classType>
      </categoryPriority>
      <codeToExecute>
        <customDisplay/>
        <disabled>0</disabled>
        <editor>---</editor>
        <name>codeToExecute</name>
        <number>11</number>
        <picker>0</picker>
        <prettyName>codeToExecute</prettyName>
        <rows>5</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </codeToExecute>
      <configurationClass>
        <customDisplay/>
        <disabled>0</disabled>
        <name>configurationClass</name>
        <number>7</number>
        <picker>0</picker>
        <prettyName>configurationClass</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </configurationClass>
      <configureGlobally>
        <customDisplay/>
        <defaultValue/>
        <disabled>0</disabled>
        <displayFormType>checkbox</displayFormType>
        <displayType/>
        <name>configureGlobally</name>
        <number>8</number>
        <prettyName>configureGlobally</prettyName>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </configureGlobally>
      <displayInCategory>
        <customDisplay/>
        <disabled>0</disabled>
        <name>displayInCategory</name>
        <number>1</number>
        <picker>0</picker>
        <prettyName>displayInCategory</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </displayInCategory>
      <displayInSection>
        <customDisplay/>
        <disabled>0</disabled>
        <name>displayInSection</name>
        <number>3</number>
        <picker>0</picker>
        <prettyName>displayInSection</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </displayInSection>
      <heading>
        <customDisplay/>
        <disabled>0</disabled>
        <name>heading</name>
        <number>6</number>
        <picker>0</picker>
        <prettyName>heading</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </heading>
      <iconAttachment>
        <customDisplay/>
        <disabled>0</disabled>
        <name>iconAttachment</name>
        <number>12</number>
        <picker>0</picker>
        <prettyName>iconAttachment</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </iconAttachment>
      <linkPrefix>
        <customDisplay/>
        <disabled>0</disabled>
        <name>linkPrefix</name>
        <number>9</number>
        <picker>0</picker>
        <prettyName>linkPrefix</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </linkPrefix>
      <propertiesToShow>
        <cache>0</cache>
        <customDisplay/>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>propertiesToShow</name>
        <number>10</number>
        <picker>0</picker>
        <prettyName>propertiesToShow</prettyName>
        <relationalStorage>1</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>20</size>
        <sort>none</sort>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <values/>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </propertiesToShow>
      <sectionPriority>
        <customDisplay/>
        <disabled>0</disabled>
        <name>sectionPriority</name>
        <number>4</number>
        <numberType>integer</numberType>
        <prettyName>sectionPriority</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <classType>com.xpn.xwiki.objects.classes.NumberClass</classType>
      </sectionPriority>
    </class>
    <property>
      <advancedOnly/>
    </property>
    <property>
      <categoryPriority>0</categoryPriority>
    </property>
    <property>
      <codeToExecute>{{velocity}}
$xwiki.jsx.use('MatchingNotification.WebHome')##
$xwiki.ssx.use('MatchingNotification.WebHome')##
$xwiki.linkx.use($services.webjars.url('jquery-dynatable', 'jquery.dynatable.css'), {'type': 'text/css', 'rel': 'stylesheet'})##
{{/velocity}}

{{html}}
&lt;div&gt;
  &lt;label&gt;Find matches with score over &lt;/label&gt;
  &lt;input id="find-matches-score"/&gt;
  &lt;button id="find-matches-button" type="button"&gt;Go&lt;/button&gt;
  &lt;div id="find-matches-messages"/&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;div&gt;
  &lt;label&gt;Show matches with score over &lt;/label&gt;
  &lt;input id="show-matches-score"/&gt;
  &lt;button id="show-matches-button" type="button"&gt;Go&lt;/button&gt;
  &lt;div id="show-matches-messages"/&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;label&gt;
  &lt;input type="checkbox" id="checkbox_all" /&gt;
  Select all
&lt;/label&gt;
&lt;label&gt;
  &lt;input type="checkbox" id="checkbox_filter_notified" /&gt;
  Filter notified
&lt;/label&gt;
&lt;br/&gt;
&lt;table id="matchesTable"&gt;
  &lt;thead&gt;
    &lt;th data-dynatable-column="checkbox"/&gt;
    &lt;th data-dynatable-column="id"&gt;id&lt;/th&gt;
    &lt;th data-dynatable-column="patientId"&gt;Patient Id&lt;/th&gt;
    &lt;th data-dynatable-column="matchedPatientId"&gt;Matched Patient Id&lt;/th&gt;
    &lt;th data-dynatable-column="score"&gt;Score&lt;/th&gt;
    &lt;th data-dynatable-column="genotypicScore"&gt;Gen&lt;/th&gt;
    &lt;th data-dynatable-column="phenotypicScore"&gt;Phen&lt;/th&gt;
    &lt;th data-dynatable-column="outgoingRequest"&gt;Outgoing Request&lt;/th&gt;
    &lt;th data-dynatable-column="remoteId"&gt;Remote Id&lt;/th&gt;
    &lt;th data-dynatable-column="timestamp"&gt;Timestamp&lt;/th&gt;
    &lt;th data-dynatable-column="email"&gt;Email&lt;/th&gt;
    &lt;th data-dynatable-column="matchedHref"&gt;Matched Href&lt;/th&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;br/&gt;
&lt;div&gt;
  &lt;label&gt;Send notifications&lt;/label&gt;
  &lt;button id="send-notifications-button" type="button"&gt;Go&lt;/button&gt;
  &lt;div id="send-notifications-messages"/&gt;
&lt;/div&gt;
{{/html}}</codeToExecute>
    </property>
    <property>
      <configurationClass/>
    </property>
    <property>
      <configureGlobally>1</configureGlobally>
    </property>
    <property>
      <displayInCategory>phenotips</displayInCategory>
    </property>
    <property>
      <displayInSection>Matching Notification</displayInSection>
    </property>
    <property>
      <heading>Manual matching notification</heading>
    </property>
    <property>
      <iconAttachment/>
    </property>
    <property>
      <linkPrefix/>
    </property>
    <property>
      <propertiesToShow/>
    </property>
    <property>
      <sectionPriority>7000</sectionPriority>
    </property>
  </object>
  <object>
    <name>MatchingNotification.WebHome</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>2619ffce-0c32-48bd-aaf7-ddaefc4dffb9</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require.config({
  paths: {
    dynatable: ["$!services.webjars.url('jquery-dynatable', 'jquery.dynatable.js')"]
  }
});

require(['jquery'], function($) {
   require(['dynatable'], function(dyna) {
      var loadMNM = function($) {
         new PhenoTips.widgets.MatchingNotificationManager($);
      };

      (XWiki.domIsLoaded &amp;&amp; loadMNM($)) || document.observe("xwiki:dom:loaded", loadMNM.bind(this, $));
   });
});

var PhenoTips = (function (PhenoTips) {
  var widgets = PhenoTips.widgets = PhenoTips.widgets || {};
  widgets.MatchingNotificationManager = Class.create({

    initialize : function ($)
    {
      this._ajaxURL = new XWiki.Document('WebHome', 'MatchingNotification').getURL('get') + '?outputSyntax=plain';
      this._$ = $;
      this._tableBuilt = false;

      this._matches = undefined;
      this._notificationResults = undefined;
      this._filteredNotified = false;

      $('#find-matches-button').on('click', this._findMatches.bind(this));
      $('#show-matches-button').on('click', this._showMatches.bind(this));
      $('#send-notifications-button').on('click', this._sendNotification.bind(this));
      $('#checkbox_all').on('click', this._checkboxAllClicked.bind(this));
      $('#checkbox_filter_notified').on('click', this._filterNotifiedClicked.bind(this));
    },

    _findMatches : function()
    {
        var _this = this;

        var score = this._checkScore('find-matches-score', 'find-matches-messages');
        if (score == undefined) {
          return;
        }
        new Ajax.Request(_this._ajaxURL,
          {  parameters : {action : 'find-matches',
                           score  : score
             },
             onSuccess : function (response) {
                _this._showSuccess('find-matches-messages');
                console.log("find matches result, score = " + score);
                console.log(response.responseJSON);
             },
             onFailure : function (response) {
                _this._showFailure('find-matches-messages');
             }
          }
        );
        this._showSent('find-matches-messages');
    },

    _showMatches : function(notificationResults)
    {
      var _this = this;
      var score = _this._checkScore('show-matches-score', 'show-matches-messages');
      if (score == undefined) {
        return;
      }
      new Ajax.Request(this._ajaxURL,
        {  parameters : {action : 'show-matches',
                         score  : score
           },
           onSuccess : function (response) {
              _this._showSuccess('show-matches-messages');
              console.log("show matches result, score = " + score);
              console.log(response.responseJSON);
              _this._matches = _this._formatMatches(response.responseJSON.matches);
              _this._notificationResults = notificationResults;
              _this._buildTable();
           },
           onFailure : function (response) {
              _this._showFailure('show-matches-messages');
           }
        }
      );
      _this._showSent('show-matches-messages');
    },

    _sendNotification : function()
    {
       var _this = this;
       var ids = this._readMatchesToNotify();
       var idsJson = JSON.stringify({ ids: ids});
       console.log("Sending " + idsJson);
       new Ajax.Request(_this._ajaxURL,
          { parameters : {action : 'send-notifications',
                          idsForNotification : idsJson
            },
            onSuccess : function (response) {
               console.log("onSuccess, received:");
               console.log(response.responseText);
               _this._showSuccess('send-notifications-messages');
               _this._showMatches(response.responseJSON);
            },
            onFailure : function (response) {
               _this._showFailure('send-notifications-messages');
            }
          }
       );
       this._showSent('send-notifications-messages');
    },

    _checkScore : function(scoreFieldName, messagesFieldName) {
      var score = this._$('#' + scoreFieldName).val();
      if (score == undefined || score == "") {
         this._showHint(messagesFieldName, "$services.localization.render('phenotips.matchingNotifications.emptyScore')");
         return;
      } else if (isNaN(score)) {
         this._showHint(messagesFieldName, "$services.localization.render('phenotips.matchingNotifications.invalidScore')");
         return;
      };
      scoreNumber = Number(score);
      if (scoreNumber &lt; 0 || scoreNumber &gt; 1) {
         this._showHint(messagesFieldName, "$services.localization.render('phenotips.matchingNotifications.invalidScore')");
         return;
      }
      return score;
    },

    _showSent : function(messagesFieldName) {
      this._showHint(messagesFieldName, "$services.localization.render('phenotips.matchingNotifications.requestSent')");
    },

    _showSuccess : function(messagesFieldName, value) {
      this._showHint(messagesFieldName, "$services.localization.render('phenotips.matchingNotifications.success')");
    },

    _showFailure : function(messagesFieldName) {
      this._showHint(messagesFieldName, "$services.localization.render('phenotips.matchingNotifications.failure')");
    },

    _showHint : function(messagesFieldName, message) {
      var messages = this._$('#' + messagesFieldName);
      messages.empty();
      messages.append(new Element('div', {'class' : 'xHint'}).update(message));
    },

    _formatMatches : function(matches)
    {
       for (var i = 0 ; i &lt; matches.length ; i++) {
          // scores
          matches[i].score = this._roundScore(matches[i].score);
          matches[i].phenotypicScore = this._roundScore(matches[i].phenotypicScore);
          matches[i].genotypicScore = this._roundScore(matches[i].genotypicScore);

          // remote id
          var remoteId = matches[i].remoteId;
          if (remoteId == undefined || remoteId == 'undefined') {
             matches[i].remoteId = '-';
          }

          // Genes and phenotypes
          [matches[i].genes, matches[i].matchedGenes] = this._formatJSONArrays(matches[i].genes, matches[i].matchedGenes);
          [matches[i].phenotypes, matches[i].matchedPhenotypes] = this._formatJSONArrays(matches[i].phenotypes, matches[i].matchedPhenotypes, 'name');
       }
       return matches;
    },

    // Format two JSON arrays for display:
    // 1. Makes them of equal length
    // 2. Add 'none' to either, if they are empty
    // 3. Replaces every 'item' with 'item.attr' if attr!=undefined; for the case an item is a JSONObject
    _formatJSONArrays : function(arr1, arr2, attr)
    {
       if (attr != undefined) {
          for (var i=0; i&lt;arr1.size(); i++) {
             arr1[i] = arr1[i][attr];
          }
          for (var i=0; i&lt;arr2.size(); i++) {
             arr2[i] = arr2[i][attr];
          }
       }
       if (arr1.size() == 0) {
          arr1.push("none");
       }
       if (arr2.size() == 0) {
          arr2.push("none");
       }
       var l = Math.max(arr1.size(), arr2.size());
       while (arr1.size() &lt; l) {
          arr1.push("");
       }
       while (arr2.size() &lt; l) {
          arr2.push("");
       }
       return [arr1, arr2];
    },

    _roundScore : function(score)
    {
        return Math.round(Number(score) * 1000) / 1000;
    },

    _buildTable : function()
    {
      var _this = this;

      var matchesToUse = this._matches;

      if (this._filteredNotified) {
          var unnotifiedMatches = [];
          for (var i = 0 ; i &lt; this._matches.length ; i++) {
              var current = this._matches[i];
              if (!current.notified) {
                 unnotifiedMatches.push(current);
              }
          }
          matchesToUse = unnotifiedMatches;
      }

      if (this._tableBuilt) {
         var table = this._$('#matchesTable').data('dynatable');
         table.settings.dataset.originalRecords = matchesToUse;
         table.process();
      } else {
         this._$('#matchesTable').dynatable({
            dataset: {
               records: matchesToUse
            },
            writers: {
               _rowWriter: this._rowWriter.bind(this)
            },
            features: {
               pushState : false
            }
         });
      }

      // Mark notification results as successful/failed
      var results = this._notificationResults.results;
      if (results != undefined) {
         for (var i = 0 ; i &lt; results.length ; i++) {
            var result = results[i];
            var tr = this._$('#matchesTable').find("#tr_" + result.id);
            tr.attr('class', result.success ? 'successful' : 'failed');
            if (!result.success) {
                tr.find(":checkbox").attr('checked', 'checked');
            }
         }
      }

       this._tableBuilt = true;
    },

    _rowWriter : function(rowIndex, record, columns, cellWriter)
    {
       var tr = '';

       // checkbox - column 0
       var checkbox = '&lt;td&gt;&lt;input type="checkbox" id="checkbox_' + record.id + '" ' + (record.notified ? 'checked disabled ' : '') + '/&gt;&lt;/td&gt;';

       // column 1,2 - reference patient and matched patient, their genes and phenotypes
       var [patientTd, matchedPatientTd]  = this._getPatientDetailsTds(record);

       // grab the record's attribute for each column.
       // skip first column (index 0), it's for checkbox
       for (var i = 0, len = columns.length; i &lt; len; i++) {
         var id = columns[i].id;
         if (id == 'checkbox') {
            tr += checkbox;
         } else if (id == 'patientId') {
            tr += patientTd;
         } else if (id == 'matchedPatientId') {
            tr += matchedPatientTd;
         } else {
             tr += cellWriter(columns[i], record);
         }
       }

       return '&lt;tr id="tr_' + record.id + '"&gt;' + tr + '&lt;/tr&gt;';
    },

    _getPatientDetailsTds : function(record)
    {
       // The two genes array are the same size and are formatted for display. Same for phenotypes.

       var referencePatientTd = '&lt;td&gt;&lt;div class="patient-div"&gt;' + record.patientId + '&lt;/div&gt;';
       var matchedPatientTd = '&lt;td&gt;&lt;div class="patient-div"&gt;' + record.matchedPatientId + '&lt;/div&gt;';

       referencePatientTd += '&lt;div class="genes-div"&gt;&lt;div class="subtitle"&gt;genes&lt;/div&gt;';
       matchedPatientTd += '&lt;div class="genes-div"&gt;&lt;div class="subtitle"&gt;genes&lt;/div&gt;';
       for (var i = 0 ; i &lt; record.genes.size() ; i++) {
           referencePatientTd += record.genes[i] + '&lt;br/&gt;';
           matchedPatientTd += record.matchedGenes[i] + '&lt;br/&gt;';
       }
       referencePatientTd += '&lt;/div&gt;';
       matchedPatientTd += '&lt;/div&gt;';

       referencePatientTd += '&lt;div class="phenotypes-div"&gt;&lt;div class="subtitle"&gt;phenotypes&lt;/div&gt;';
       matchedPatientTd += '&lt;div class="phenotypes-div"&gt;&lt;div class="subtitle"&gt;phenotypes&lt;/div&gt;';
       for (var i = 0 ; i &lt; record.phenotypes.size() ; i++) {
           referencePatientTd += record.phenotypes[i] + '&lt;br/&gt;';
           matchedPatientTd += record.matchedPhenotypes[i] + '&lt;br/&gt;';
       }
       referencePatientTd += '&lt;/div&gt;';
       matchedPatientTd += '&lt;/div&gt;';

       referencePatientTd += '&lt;/td&gt;';
       matchedPatientTd += '&lt;/td&gt;';

       return [referencePatientTd, matchedPatientTd];
    },

    _checkboxAllClicked : function(event)
    {
       var checked = event.target.checked;
       this._$('#matchesTable').find(":checkbox").each(function (index, elm) {
          if (!elm.disabled) {
             elm.checked = checked;
          }
       });
    },

    _filterNotifiedClicked : function(event)
    {
       var checked = event.target.checked;
       this._filteredNotified = checked;
       this._buildTable();
    },

    _readMatchesToNotify : function()
    {
       var ids = [];
       this._$('#matchesTable').find(":checkbox").each(function (index, elm) {
          if (elm.checked &amp;&amp; !elm.disabled) {
             var id = Number(elm.id.substr(elm.id.indexOf('_')+1));
             ids.push(String(id));
          }
       });
       return ids;
    }
  });
  return PhenoTips;
}(PhenoTips || {}));</code>
    </property>
    <property>
      <name>Find matches</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
  <object>
    <name>MatchingNotification.WebHome</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>783f6f60-22da-479a-b17f-22621b966166</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>.successful {
  color: green;
}

.failed {
  color: red;
}

.ok {
  color: inherit;
}

.patient-div {
    margin-bottom: 10px;
}

.genes-div {
    margin-bottom: 10px;
}

.subtitle {
    font-style: oblique;
}

#matchesTable th {
    white-space: nowrap;
}

#matchesTable td {
    vertical-align: text-top;
}


#checkbox_filter_notified {
    margin-bottom: 20px;
}

</code>
    </property>
    <property>
      <contentType>CSS</contentType>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
</xwikidoc>
