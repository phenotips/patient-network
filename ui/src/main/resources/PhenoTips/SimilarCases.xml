<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see http://www.gnu.org/licenses/
-->

<xwikidoc version="1.1">
  <web>PhenoTips</web>
  <name>SimilarCases</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1393098154000</creationDate>
  <parent>PhenoTips.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1396352668000</date>
  <contentUpdateDate>1396350913000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content>{{velocity}}
(% class="" id="similar-cases-container"%)(((##
##
#macro (__generateRefreshMatchesSelector )
{{html clean=false}}##
&lt;div class="refresh-matches-container"&gt;
&lt;span class="buttonwrapper similarity-results-refresh" id="similarity-results-refresh"&gt;
  &lt;button id="refresh-all-button"&gt;
    &lt;span class="fa fa-refresh" title=""&gt;&lt;/span&gt;
    &lt;span class="refresh-matches-button"&gt;$escapetool.xml($services.localization.render('phenotips.similarCases.refreshMatches.allServers.label'))&lt;/span&gt;
  &lt;/button&gt;
  &lt;button id="refresh-remote-select" class="refresh-remote-select"&gt; &lt;span class="fa fa-caret-down" title=""&gt;&lt;/span&gt;&lt;/button&gt;
  &lt;div id="remote-select-dropdown" class="dropdown-menu"&gt;
    &lt;a class="local" href="#"&gt;$escapetool.xml($services.localization.render('phenotips.similarCases.refreshMatches.localServer.label'))&lt;/a&gt;
##=======================================
## Get list of remote configurations and
## only display those which have a non-empty token and the checkbox to show in UI is checked
##=======================================
#set ($preferenceDoc = $xwiki.getDocumentAsAuthor("XWiki.XWikiPreferences"))
#set ($allRemotes = $preferenceDoc.getObjects("PhenomeCentral.RemoteMatchingServiceConfiguration"))
#foreach ($config in $allRemotes)
  #if ($config.getProperty('remoteAuthToken').getValue() != "" &amp;&amp; $config.getProperty('serverId').getValue() != "" &amp;&amp; $config.getProperty('includeInUI').getValue() == 1)
    #set ($serverID = $config.getProperty('serverId').getValue())
    #set ($serverName = $config.getProperty('humanReadableName').getValue())
    #if ($serverName == "")
      #set ($serverName = $serverID)
    #end
    &lt;a class="${escapetool.xml($serverID)}" href="#"&gt;${escapetool.xml($serverName)}&lt;/a&gt;
  #end
#end
  &lt;/div&gt;
&lt;/span&gt;
&lt;/div&gt;
{{/html}}##
##
#end
##
##
#if ($xwiki.hasAccessLevel('view', $xcontext.user, 'PhenoTips.SimilarCases'))
  $xwiki.jsx.use('PhenoTips.SimilarCases', {'minify' : false})##
  $xwiki.ssx.use('PhenoTips.SimilarCases')##
  $xwiki.ssx.use('PhenoTips.PatientSheetCode')##
  $xwiki.jsx.use($doc.fullName, {'minify' : false})##
  ##
  (% class="clear clinical-info similarity-info chapter"%)(((##
    #__generateRefreshMatchesSelector()
    {{include reference="MatchingNotification.MatchesTable" /}}
  )))
#end## action == view
{{/velocity}}
  </content>
  <class>
    <name>PhenoTips.SimilarCases</name>
    <customClass/>
    <customMapping/>
    <defaultViewSheet/>
    <defaultEditSheet/>
    <defaultWeb/>
    <nameField/>
    <validationScript/>
    <enable>
      <customDisplay/>
      <defaultValue/>
      <disabled>0</disabled>
      <displayFormType>checkbox</displayFormType>
      <displayType/>
      <name>enable</name>
      <number>1</number>
      <prettyName>Enable similar cases suggestions</prettyName>
      <unmodifiable>0</unmodifiable>
      <validationMessage/>
      <validationRegExp/>
      <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
    </enable>
    <max_results>
      <customDisplay/>
      <disabled>0</disabled>
      <name>max_results</name>
      <number>2</number>
      <numberType>integer</numberType>
      <prettyName>Maximum numbers of results to show</prettyName>
      <size>3</size>
      <unmodifiable>0</unmodifiable>
      <validationMessage/>
      <validationRegExp/>
      <classType>com.xpn.xwiki.objects.classes.NumberClass</classType>
    </max_results>
    <min_score>
      <customDisplay/>
      <disabled>0</disabled>
      <name>min_score</name>
      <number>3</number>
      <numberType>float</numberType>
      <prettyName>Minimum relevance score of retrieved suggestions (between 0 and 1)</prettyName>
      <size>3</size>
      <unmodifiable>0</unmodifiable>
      <validationMessage/>
      <validationRegExp/>
      <classType>com.xpn.xwiki.objects.classes.NumberClass</classType>
    </min_score>
  </class>
  <object>
    <name>PhenoTips.SimilarCases</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>9f32c038-3885-430b-b820-c088c0b5940a</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>var PhenoTips = (function (PhenoTips) {
  var generateTabs = function (onSimilarCasesPage) {

    var _generateSimilarCasesTab = function (isActive) {
      var url = XWiki.currentDocument.getURL('view', 'sheet=PhenoTips.SimilarCases');
      var tab = _generateTab(
        'similar-cases-tab', // element id
        isActive,
        "$escapetool.javascript($services.localization.render('phenotips.similarCases.title'))", //displayed text
        url // url for inactive tabs
      );

      if (!isActive) {
        tab.observe('click', function(event) {
          event.stop();
          PhenoTips.widgets.FormUtils.getFormState().saveIfFormDirty( function () {
            window.location = url;
          });
        });
      }

      return tab;
    };

    var _generateInactivePatientsTab = function () {
      return _generateTab(
        'document-title',
        false,
        XWiki.currentDocument.page,
        XWiki.currentDocument.getURL(XWiki.contextaction)
      );
    };

    var _generateTab = function (id, isActive, text, url) {
      var elt = new Element('div', {'class' : 'title-tab' + (isActive? ' active' : ''), id : id});
      if (isActive) {
        var title = new Element('h1').update(text)
        elt.update(title);
      } else {
        var link = new Element('a', {'href' : url});
        link.update(text);
        elt.update(link);
      }
      return elt;
    };

    var _hideElement = function (id) {
      $(id) &amp;&amp; $(id).hide();
    };

    if (onSimilarCasesPage) {
      $('body').addClassName('matching-patients');
      // Change patient's page tab to be inactive
      $('document-head') &amp;&amp; $('document-title').insert({after: _generateInactivePatientsTab()});
      $('document-title') &amp;&amp; $('document-title').remove();
      ['document-authors', 'patient-record-actions', $$('.bottombuttons')[0]].each(_hideElement);
    }

    // Add a new tab in the title bar
    $('document-head') &amp;&amp; $('document-title').insert({after: _generateSimilarCasesTab(onSimilarCasesPage)});
  };

  var initRefreshRemoteMatchesSelect = function() {
    if (!$('similarity-results-refresh')) {
      return;
    }

    var _refreshMatches = function(url, serverId, notification) {
      var _this = this;

      var _generateFailureReason = function(status) {
          var response;
          switch(status) {
            case 401:
              response = "$escapetool.javascript($services.localization.render('phenotips.similarCases.error.notAuthenticated'))";
              break;
            case 400:
              response = "$escapetool.javascript($services.localization.render('phenotips.similarCases.error.badRequest'))";
              break;
            case 204:
              response = "$escapetool.javascript($services.localization.render('phenotips.similarCases.noMatchRequest'))";
              break;
            case 409:
              response = "$escapetool.javascript($services.localization.render('phenotips.similarCases.error.cantSendThisPatientOverMME'))";
              break;
            case 503:
              response = "$escapetool.javascript($services.localization.render('phenotips.similarCases.error.cantConnectMME'))";
              break;
            case 403:
              response = "$escapetool.javascript($services.localization.render('phenotips.similarCases.error.notAuthorizedMME'))";
              break;
            case 406:
              response = "$escapetool.javascript($services.localization.render('phenotips.similarCases.error.invalidRequestMME'))";
              break;
            case 415:
              response = "$escapetool.javascript($services.localization.render('phenotips.similarCases.error.unsupportedProtocolMME'))";
              break;
            case 500:
              response = "$escapetool.javascript($services.localization.render('phenotips.similarCases.error.unexpectedError'))";
              break;
            default:
            response = "$escapetool.javascript($services.localization.render('phenotips.similarCases.error.unexpectedError'))";
          }
          return response;
      };

      var _getServerName = function(serverId) {
        var name = $('remote-select-dropdown').down('a.' + serverId);
        if (name) {
          return name.innerHTML;
        } else {
          return serverId;
        }
      };

      var serverName = _getServerName(serverId);

      new Ajax.Request(url + "?method=PUT", {
          contentType : 'application/json',
          parameters : {'serverId' : serverId},
          onSuccess : function(response) {
            var message = (serverId == "local") ? "$escapetool.javascript($services.localization.render('phenotips.similarCases.success.local'))" : "$escapetool.javascript($services.localization.render('phenotips.similarCases.success')) " + serverName;
            notification.replace(new XWiki.widgets.Notification(message, "done"));
            var event = { 'notificationResult' : 'success' };
            document.fire("matches:refreshed", event);
          },
          onFailure : function(response) {
            var error = _generateFailureReason(response.status);
            var message = "$escapetool.javascript($services.localization.render('phenotips.similarCases.errorSendingRequest')) " + serverName + ": " + error;
            notification.replace(new XWiki.widgets.Notification(message, "error"));
          }
      });
    };

    var urlRefreshMatches = window.location.protocol + '//' + window.location.host + '/rest/matches/patients/' + XWiki.currentDocument.page;
    var refreshingNotification = new XWiki.widgets.Notification("Refreshing", "inprogress", {'inactive': true});

    // Refresh local matches
    $('refresh-all-button') &amp;&amp; $('refresh-all-button').observe("click", function(event) {
        event.stop();
        refreshingNotification.show();
        var allServers = $$('#remote-select-dropdown a');
        allServers.each(function (server) {
          (server.className != "all-remotes") &amp;&amp; _refreshMatches(urlRefreshMatches, server.className, refreshingNotification);
        }.bind(this));
    });

    $('refresh-remote-select').observe("click", function(event) {
        event.stop();
        $('remote-select-dropdown').toggleClassName("show");
        $('body').addEventListener('click', dropdownCloser, false);
    });

    $$(".dropdown-menu a").invoke("observe", "click", function(event) {
        $('remote-select-dropdown').removeClassName("show");
        $('body').removeEventListener('click', dropdownCloser, false);

        var serverEl = event.element();
        if (!serverEl || serverEl.className == "") { return; }

        refreshingNotification.show();
        _refreshMatches(urlRefreshMatches, serverEl.className, refreshingNotification);
    });

    var dropdownCloser = function(event) {
        // close remote servers dropdown menu on click outside
        var el = event.element();
        if (!el.up('#remote-select-dropdown')) {
          $('remote-select-dropdown').removeClassName("show");
          $('body').removeEventListener('click', dropdownCloser, false);
        }
    };
  };

  var fetchConsents = function(callback) {
    // Get local consents via REST and check if "real" consent is granted
    new Ajax.Request(XWiki.contextPath + "/rest/patients/" + XWiki.currentDocument.page + "/consents?method=get", {
      onSuccess : function(response) {
        var consents = response.responseJSON;
        if (!consents || consents.length == 0) {
          return;
        }
        // if "real" consent not granted - generate tab
        var realGranted = consents.filter( function(consent) { return consent.id == "real" &amp;&amp; consent.status == "yes"; } );
        if (realGranted.length &gt; 0) {
          callback(false);
        }
      }
    });
  };

  var init = function() {
    // Quick hack to confirm we're on a patient page and widgets.Matcher is not initialized yet:
    if (!$('patient-record-actions') || $('similar-cases-tab')) {
      return;
    }

    var onSimilarCasesPage = $('similar-cases-container');

    if (onSimilarCasesPage) {
      generateTabs(onSimilarCasesPage);
      initRefreshRemoteMatchesSelect();
    } else {
      // Matched patient's tab is not active
      // generate the tab for similar cases only if the "real" consent is granted

      // if consents are already available from the patient page
      if ($('patient-consents-json')) {
        // Check all required "real" consent:
        var consents = [];
        try {
          consents = JSON.parse($('patient-consents-json').value);
        } catch(err) {
          console &amp;&amp; console.log(err);
        }

        if (!consents || consents.length == 0) {
          return;
        }

        var realGranted = consents.filter( function(consent) { return consent.id == "real" &amp;&amp; consent.status == "yes"; } );
        if (realGranted.length &gt; 0) {
          generateTabs(onSimilarCasesPage);
        }
      } else {
        fetchConsents(generateTabs);
      }
    }
  };

  (XWiki &amp;&amp; XWiki.domIsLoaded &amp;&amp; init()) || document.observe("xwiki:dom:loaded", init);

  // End PhenoTips augmentation.
  return PhenoTips;
}(PhenoTips || {}));</code>
    </property>
    <property>
      <name>Similar cases suggestions code</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>always</use>
    </property>
  </object>
  <object>
    <name>PhenoTips.SimilarCases</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>314a760a-1ec1-46d2-a262-b728dd8e61f9</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>#template("colorThemeInit.vm")

.chapter.similarity-info .action-edit {
  display: none !important;
}
.similarity-results-refresh {
  float: right;
  margin: 0;
}
.similarity-results-container {
  clear: both;
  min-height: 3em;
  margin-bottom: .5em;
}
.buttonwrapper .dropdown-menu {
  position: absolute;
  top: 1.5em;
  right: 1%;
  z-index: 1000;
  display: none;
  float: right;
  min-width: 10rem;
  padding: .5rem 0;
  margin: .125rem 0 0;
  font-size: 1rem;
  color: #212529;
  text-align: left;
  list-style: none;
  background-color: #fff;
  background-clip: padding-box;
  border: 1px solid rgba(0,0,0,.15);
  border-radius: .25rem;
}
.buttonwrapper .dropdown-menu a {
  display: block;
  padding: .2em 1rem;
  clear: both;
  font-weight: 400;
  color: #212529;
  text-align: inherit;
  white-space: nowrap;
  background-image: none;
  background-color: transparent;
  border: 0;
  border-radius: 0;
  text-shadow: none;
  text-transform: none;
}
.dropdown-menu a:focus, .dropdown-menu a:hover {
  color: #16181b;
  text-decoration: none;
  background-color: #f8f9fa;
  background-image: none;
  box-shadow: none;
}
.dropdown-menu.show {
  display: block;
}
.refresh-matches-container {
  position: relative;
}
.chapter.similarity-info .similar-cases-category {
  margin-top: 3.5em;
}
.chapter.similarity-info h3 {
  border: 0 none;
}
#similar-prototypes-container .contact {
  display: none;
}
.similarity-info .refresh-matches-button {
  margin-left: 5px;
  white-space: nowrap;
}</code>
    </property>
    <property>
      <name>Similar cases style</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
  <object>
    <name>PhenoTips.SimilarCases</name>
    <number>3</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>fbd8e808-942d-40f2-9478-ef83760355c8</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>#template("colorThemeInit.vm")

.space-data.matching-patients #mainContentArea {
  border-top: .4em solid $theme.menuGradientColor;
  background: #FFFFFF;
}
.matching-patients #similar-cases-container .label, .matching-patients #similar-cases-container label {
  font-weight: normal;
  width: 100%;
  display: inline;
}
.matching-patients .expandall {
  line-height: 20px;
}
.space-data.matching-patients #document-head {
  margin-top: -3.3em;
}
.space-data #document-head .title-tab {
  margin: 0 0 0 1px !important;
}
.space-data #document-head .title-tab:not(.active) {
  background-color: $theme.buttonPrimaryBackgroundColor;
  background-image: none;
  #css3_backgroundLinearGradient({
     'to': 'bottom',
     'colors': [
      {'color': $theme.buttonPrimaryGradientColor, 'position': '0%'},
      {'color': $theme.buttonPrimaryBackgroundColor, 'position': '100%'}
    ]
  })
  font-weight: normal;
}
.space-data #document-head .title-tab a {
  color: $theme.buttonPrimaryTextColor;
}
.space-data #document-head .title-tab a:hover {
  color: $theme.buttonPrimaryTextColor;
}
.space-data #document-title.active {
  margin-left: 0;
}
</code>
    </property>
    <property>
      <name>Simiar Cases Tab style</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>always</use>
    </property>
  </object>
</xwikidoc>
